---
layout: post
title:  "Mono and Poly Alphabetic Cipher Part 2"
date:   2021-09-18 11:24:36 +0530
categories: Cryptography
---

### **Vigenere Cipher** <br/>


**Vigenere Cipher**  <br/>
<br/>
Invented by Blaise de Vigenere in 1523 <br/>

![Image Alt MemoryLayout](/assets/vigenere.png) <br/>

- 'k' = belongs to the Captical k (ki) 'K' = belongs to the key <br/>
- ki = K <br/>
- K = YORK , you can convert key to the sequence <br/>
![Image Alt MemoryLayout](/assets/vigenere1.png) <br/>
- 'A' + 'Y' mod 26 = Y / 'T' + 'O' mod 26 = H <br/>
-  Since all same alphabet is mapped to the different key , it removes the frequency analysis <br/>
<br/>

Ciphertext generated by Vigenere cipher has much more **smoother (i.e. more uniform shape) frequency histogram** than those generated by monoalphabetic ciphers <br/>
<br/>

**Is this a secure cipher?**  <br/>
<br/>

- Exhuastive Attack: Key space is 26^|k| to 2^5|k| -> hopeless to brute-force <br/>
- The Friedman Attack using **Index of Coincidence** -> Possible! <br/>
- Finding the **key length** of Vigenere Cipher can help us to break a given ciphertext into multiple(shorter) ciphertexts produced by a shift cipher <br/>
- Example: Key = "YORK" - key length is = 4 <br/>
![Image Alt MemoryLayout](/assets/vigenere1.png) <br/>
- Every 4 letter encrypted using key "Y" <br/>
- If I take the subset of the alphabet assoicated with "Y", I can say this substring is only encrypted using shift cipher and "Y" was the key <br/>
<br/>

**Main Idea for Cracking Vigenere Cipher** <br/> 
<br/>

1. Find the **Key's length** used in the generation of the ciphertext  <br/>
2. Break the ciphertext into multiple (shorter) ciphertext based on the key length <br/>
3. Perform frequency analysis on each cipheretext segments to find the shift and perform decryption <br/>
4. Reassemble back the decrypted cipherteext segments to get the original plaintext back <br/>
<br/>

**Example** <br/>
Suppose the key length is 4 <br/>
<br/>
CipherText: YHKRCGKKPHFPRVVPGFJDEODORVVZPC<br/>

1. Break the ciphertext into 4 segments (same as the key length). Letters that are 4 step apart becomes part of the same segment <br/>
   "YCPRGERP", "HGHVFOVC", "KKFVJDV", RKPPDOZ" -> Produced by Casesar Cipher<br/>

2. Each ciphertext segment is produced by a shiftcipher with an unknown key <br/>
   Perform frequency analysis to find the key on each segment <br/>

<br/>
<br/>

**Index of Coincidence** <br/>
<br/>

- A measure of how likely it is to draw two matching letters by randomly selecting **two letters** from a given text <br/>
![Image Alt MemoryLayout](/assets/coi.png) <br/>
- If I randomly choose "E", there is 11% that I choose will be letter "E" <br/>  
- What is the probability of we selecting "A" is the P("AA") = F(A)^2 = 0.08 * 0.08 = 0.064 <br/>
- IC = 0.0667 for the Enlgish language letter frequency <br/>
![Image Alt MemoryLayout](/assets/coi1.png) <br/>
- Why do we care: Can tell us if two given distributions of letters are almost similar  <br/>
- **IC does not change if a given text is scambled by a single-alphabet substitution cipher** <br/>
- Suppose that we have intercepted ciphertext (We need to find out if it is polyalphabetic or monoalphabetic cipher was used to produce it) <br/>  

1. Compute letter Frequency <br/>
2. Compute the index of Coincidence <br/>
3. Compare computed IC with English IC (0.0667) <br/>

<br/>

**Thinking Back to the Example** <br/>
<br/>
When I created segments, guess the key length is "4", divide the segments into 4 segments and for each segment compute the index of co-incidence and average of the index of the coincidence. <br/>
If the average is similar to the english coincidence (0.067) then I guess the number key length 4 is correct, if not try 1,2,3,... <br/>
<br/>
<br/>

**Algorithm Vigenere Cipher** <br/>
<br/>

1. Find the Key length: Start by key_length = 2 <br/>
2. Create the ciphertext segments according to the key_length <br/>
3. Compute **Index of Coincidence** (IC) for each segment and average them <br/>
4. Is the computed average close to 0.0667 ? If not incrase key_length by 1 and go to step 2 <br/>
<br/>

**Hill Cipher** <br/>
<br/>
A ployalphabetic cipher invented by Lester S. HIll in 1929 based on linear algebra operations <br/>

![Image Alt MemoryLayout](/assets/hill.png) <br/>

- Key is the "MATRIX"  <br/>
- Invserse of the K matrix will be the key <br/>
- The key Matrix[K] is an n x n matrix (square matrix) <br/>
   - Must be able to invert the key matrix for decryption -> gcd(dek[K],26) = 1 <br/>
   - Hill Cipher is considered a block cipher as it operate on "blocks" of plaintext/ciphertext at each encryption/decryption action <br/>
<br/>

**Hill Cipher Example** <br/>
<br/>

![Image Alt MemoryLayout](/assets/hill1.png) <br/>
- Since the matrix is 3 x 3 = we can do 3 letters at a time encrypted together <br/>
- Is this secure? 26^n^2 matrices of dimensions (nxn) <br/>
- Known Plaintext Attack : Intercepting n^2 known plaintext / ciphertext character pair, one can form linear equations to find the matrix[K] <br/>
<br/>

**Confusion and Diffusion** 
<br/>
Proposed by Claude Shannon in his 1945 classified report "A Mathematical Theory of Cryptography" <br/>

- Confusion: each bit of the ciphertext depend on several parts of the key (in order to obscuring the connections between the two) <br/>
   If I change single bit in my key, multiple bits of the cipher text will get affected <br/>
   If single bit in a key is changed, the calculation of most or all of the bits in the ciphertext will be affected <br/>
<br/>

- Diffusion: Change a single bit of the plaintext should change about half of the bits in the ciphertext (also known as **Avalanche Effect**)<br/>
   Hid statistical relationship between plaintext and ciphertext <br/>


